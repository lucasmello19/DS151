{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CustomSearchBar = function CustomSearchBar(_ref) {\n  var onSearch = _ref.onSearch;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    searchText = _useState2[0],\n    setSearchText = _useState2[1];\n  var handleSearch = function handleSearch() {\n    onSearch(searchText);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Digite sua pesquisa...\",\n      onChangeText: function onChangeText(text) {\n        return setSearchText(text);\n      },\n      value: searchText\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSearch,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Pesquisar\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    elevation: 3,\n    margin: 10\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    paddingHorizontal: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginLeft: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default CustomSearchBar;","map":{"version":3,"names":["React","useState","View","TextInput","StyleSheet","TouchableOpacity","Text","jsx","_jsx","jsxs","_jsxs","CustomSearchBar","_ref","onSearch","_useState","_useState2","_slicedToArray","searchText","setSearchText","handleSearch","style","styles","container","children","input","placeholder","onChangeText","text","value","button","onPress","buttonText","create","flexDirection","alignItems","backgroundColor","borderRadius","paddingHorizontal","elevation","margin","flex","height","padding","marginLeft","color","fontWeight"],"sources":["C:/Users/726246/Documents/DS151/DS151/Components/SearchBar/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\n\r\nconst CustomSearchBar = ({ onSearch }) => {\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const handleSearch = () => {\r\n        onSearch(searchText);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Digite sua pesquisa...\"\r\n                onChangeText={(text) => setSearchText(text)}\r\n                value={searchText}\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={handleSearch}>\r\n                <Text style={styles.buttonText}>Pesquisar</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        borderRadius: 5,\r\n        paddingHorizontal: 10,\r\n        elevation: 3, // Efeito de elevação para sombra (opcional)\r\n        margin: 10,\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        height: 40,\r\n        paddingHorizontal: 10,\r\n    },\r\n    button: {\r\n        backgroundColor: 'blue',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        marginLeft: 10,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default CustomSearchBar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC/B,IAAAC,SAAA,GAAoCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACvBN,QAAQ,CAACI,UAAU,CAAC;EACxB,CAAC;EAED,OACIP,KAAA,CAACR,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1Bf,IAAA,CAACL,SAAS;MACNiB,KAAK,EAAEC,MAAM,CAACG,KAAM;MACpBC,WAAW,EAAC,wBAAwB;MACpCC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKT,aAAa,CAACS,IAAI,CAAC;MAAA,CAAC;MAC5CC,KAAK,EAAEX;IAAW,CACrB,CAAC,EACFT,IAAA,CAACH,gBAAgB;MAACe,KAAK,EAAEC,MAAM,CAACQ,MAAO;MAACC,OAAO,EAAEX,YAAa;MAAAI,QAAA,EAC1Df,IAAA,CAACF,IAAI;QAACc,KAAK,EAAEC,MAAM,CAACU,UAAW;QAAAR,QAAA,EAAC;MAAS,CAAM;IAAC,CAClC,CAAC;EAAA,CACjB,CAAC;AAEf,CAAC;AAED,IAAMF,MAAM,GAAGjB,UAAU,CAAC4B,MAAM,CAAC;EAC7BV,SAAS,EAAE;IACPW,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,EAAE;IACrBC,SAAS,EAAE,CAAC;IACZC,MAAM,EAAE;EACZ,CAAC;EACDf,KAAK,EAAE;IACHgB,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVJ,iBAAiB,EAAE;EACvB,CAAC;EACDR,MAAM,EAAE;IACJM,eAAe,EAAE,MAAM;IACvBO,OAAO,EAAE,EAAE;IACXN,YAAY,EAAE,CAAC;IACfO,UAAU,EAAE;EAChB,CAAC;EACDZ,UAAU,EAAE;IACRa,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAelC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}