{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ColorList() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    colors = _useState2[0],\n    setColors = _useState2[1];\n  var addColor = function addColor() {\n    var red = Math.floor(Math.random() * 255);\n    var green = Math.floor(Math.random() * 225);\n    var blue = Math.floor(Math.random() * 255);\n    setColors(function (prevColors) {\n      return [].concat(_toConsumableArray(prevColors), [`rgb(${red},${green},${blue})`]);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Adicionar Cor\",\n      onPress: addColor\n    }), _jsx(View, {\n      style: styles.colorContainer,\n      children: _jsx(FlatList, {\n        data: colors,\n        horizontal: true,\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(View, {\n            style: {\n              backgroundColor: item,\n              width: 100,\n              height: 100,\n              marginRight: 10\n            }\n          });\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  colorContainer: {\n    flexDirection: 'row',\n    marginTop: 20\n  }\n});\nexport default ColorList;","map":{"version":3,"names":["React","useState","View","Button","FlatList","StyleSheet","jsx","_jsx","jsxs","_jsxs","ColorList","_useState","_useState2","_slicedToArray","colors","setColors","addColor","red","Math","floor","random","green","blue","prevColors","concat","_toConsumableArray","style","styles","container","children","title","onPress","colorContainer","data","horizontal","keyExtractor","item","renderItem","_ref","backgroundColor","width","height","marginRight","create","flex","alignItems","justifyContent","flexDirection","marginTop"],"sources":["C:/Users/726246/Documents/DS151/DS151/ColorList/ColorList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, FlatList, StyleSheet } from 'react-native';\r\n\r\nfunction ColorList() {\r\n    const [colors, setColors] = useState([]);\r\n\r\n    const addColor = () => {\r\n        const red = Math.floor(Math.random() * 255);\r\n        const green = Math.floor(Math.random() * 225);\r\n        const blue = Math.floor(Math.random() * 255);\r\n        setColors(prevColors => [...prevColors, `rgb(${red},${green},${blue})`]);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Button title=\"Adicionar Cor\" onPress={addColor} />\r\n            <View style={styles.colorContainer}>\r\n                <FlatList\r\n                    data={colors}\r\n                    horizontal={true} // Display items horizontally\r\n                    keyExtractor={(item) => item}\r\n                    renderItem={({ item }) => (\r\n                        <View\r\n                            style={{\r\n                                backgroundColor: item,\r\n                                width: 100,\r\n                                height: 100,\r\n                                marginRight: 10, // Add margin to create spacing between colors\r\n                            }}\r\n                        ></View>\r\n                    )}\r\n                />\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    colorContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n    },\r\n});\r\n\r\nexport default ColorList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,SAASC,SAASA,CAAA,EAAG;EACjB,IAAAC,SAAA,GAA4BV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACnB,IAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3C,IAAMC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC7C,IAAME,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IAC5CL,SAAS,CAAC,UAAAQ,UAAU;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAAQF,UAAU,IAAG,OAAMN,GAAI,IAAGI,KAAM,IAAGC,IAAK,GAAE;IAAA,CAAC,CAAC;EAC5E,CAAC;EAED,OACIb,KAAA,CAACP,IAAI;IAACwB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BtB,IAAA,CAACJ,MAAM;MAAC2B,KAAK,EAAC,eAAe;MAACC,OAAO,EAAEf;IAAS,CAAE,CAAC,EACnDT,IAAA,CAACL,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACK,cAAe;MAAAH,QAAA,EAC/BtB,IAAA,CAACH,QAAQ;QACL6B,IAAI,EAAEnB,MAAO;QACboB,UAAU,EAAE,IAAK;QACjBC,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKA,IAAI;QAAA,CAAC;QAC7BC,UAAU,EAAE,SAAAA,WAAAC,IAAA;UAAA,IAAGF,IAAI,GAAAE,IAAA,CAAJF,IAAI;UAAA,OACf7B,IAAA,CAACL,IAAI;YACDwB,KAAK,EAAE;cACHa,eAAe,EAAEH,IAAI;cACrBI,KAAK,EAAE,GAAG;cACVC,MAAM,EAAE,GAAG;cACXC,WAAW,EAAE;YACjB;UAAE,CACC,CAAC;QAAA;MACV,CACL;IAAC,CACA,CAAC;EAAA,CACL,CAAC;AAEf;AAEA,IAAMf,MAAM,GAAGtB,UAAU,CAACsC,MAAM,CAAC;EAC7Bf,SAAS,EAAE;IACPgB,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDd,cAAc,EAAE;IACZe,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAetC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}